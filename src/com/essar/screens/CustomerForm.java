/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.essar.screens;

import com.essar.dao.CustomerDAO;
import com.essar.dao.PricingTierDAO;
import com.essar.dao.ProductCategoryDAO;
import com.essar.pojos.Customer;
import com.essar.pojos.PricingTier;
import com.essar.utils.TableMouseListener;
import com.essar.pojos.ProductCategory;
import com.essar.utils.GenericUtils;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author rahumathulla
 */
public class CustomerForm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ProductCategory
     */
    long customerId=0;
    DefaultTableModel customerModel = null;
    public CustomerForm() {
        initComponents();
        initializeForm();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tienda.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        mnuCustomer = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        pnlCustomer = new javax.swing.JPanel();
        panCustomer = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        lblCustomerName = new javax.swing.JLabel();
        lblCustomerPhoneNumber = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtCustomerPhone = new javax.swing.JTextField();
        txtCustomerName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblCount = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        mitDelete.setText("jMenuItem1");

        mitEdit.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customers");
        setName("frmProductCategory"); // NOI18N

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Phone Number", "Address", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        panCustomer.setViewportView(tblCustomer);

        javax.swing.GroupLayout pnlCustomerLayout = new javax.swing.GroupLayout(pnlCustomer);
        pnlCustomer.setLayout(pnlCustomerLayout);
        pnlCustomerLayout.setHorizontalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCustomerLayout.setVerticalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCustomerName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCustomerName.setText("Customer Name");

        lblCustomerPhoneNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCustomerPhoneNumber.setText("Customer Phone Number");

        lblAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblAddress.setText("Address");

        txtAddress.setColumns(16);
        txtAddress.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtAddress.setRows(3);
        txtAddress.setTabSize(2);
        txtAddress.setToolTipText("");
        txtAddress.setAutoscrolls(false);
        jScrollPane3.setViewportView(txtAddress);

        txtCustomerPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtCustomerName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblCount.setForeground(new java.awt.Color(102, 102, 255));
        lblCount.setText("Count:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCustomerPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblCount, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCustomerName)
                                .addComponent(txtCustomerPhone)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel))))
                    .addComponent(pnlCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnCancel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(pnlCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(btnSave.getText().equalsIgnoreCase("add")){
            btnSave.setText("Save");
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
            enableFormElements(true);
            txtCustomerName.requestFocus();
        }else{
            if(validateForm()){
                if(customerId>0)
                    updateCustomerForm();
                else
                    saveCustomerForm();
                initializeForm();

            }   

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerForm().setVisible(true);
            }
        });
    }
    
    public void initializeForm(){
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        model.setRowCount(0);
        
        btnSave.setText("Add");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png")));
        btnSave.requestFocus();
        txtCustomerName.setText("");
        txtCustomerPhone.setText("");
        txtAddress.setText("");
     
        //tblProductCategory.re();
        //tblCategory.remove(panPricingTier);
        enableFormElements(false);
        CustomerDAO customerDAO = new CustomerDAO();
        renderDataIntoTable(customerDAO.retrieveAll());
        mnuCustomer = new JPopupMenu();
        
        mitEdit = new JMenuItem("Edit");
        mitEdit.addActionListener(this);
        
        mitDelete = new JMenuItem("Delete");
        mitDelete.addActionListener(this);
        
        mnuCustomer.add(mitEdit);
        mnuCustomer.add(mitDelete);
         // sets the popup menu for the table
        tblCustomer.setComponentPopupMenu(mnuCustomer);      
        tblCustomer.addMouseListener(new TableMouseListener(tblCustomer));
        
        TableColumn idColumn1 = tblCustomer.getColumnModel().getColumn(tblCustomer.getColumnCount()-1);
        idColumn1.setPreferredWidth(0);
        idColumn1.setMinWidth(0);
        idColumn1.setMaxWidth(0);
        
        TableColumn addressColumn = tblCustomer.getColumnModel().getColumn(tblCustomer.getColumnCount()-2);
        addressColumn.setPreferredWidth(400);
        addressColumn.setMinWidth(400);
        //idColumn1.setMaxWidth(0);
        
        TableColumn phoneNumberColumn = tblCustomer.getColumnModel().getColumn(1);
        phoneNumberColumn.setPreferredWidth(60);
        phoneNumberColumn.setMinWidth(60);
        
        TableColumn customerNameColumn = tblCustomer.getColumnModel().getColumn(0);
        customerNameColumn.setPreferredWidth(200);
        customerNameColumn.setMinWidth(200);
        customerNameColumn.setMaxWidth(200);
        customerId =0;
   
    }
    
    public void enableFormElements(boolean flag){
        txtCustomerName.setEnabled(flag);
        txtCustomerPhone.setEnabled(flag);
        txtAddress.setEnabled(flag);
    }
    public boolean validateForm(){
        //btnSave.setText("Add");
        //btnSave.requestFocus();
        if(null == txtCustomerName.getText()){
            JOptionPane.showMessageDialog(null, "Customer Name "+txtCustomerName.getText() +" is not valid.");
            return false;
        }
        if(null == txtCustomerPhone.getText() || !(txtCustomerPhone.getText().matches("\\d+"))){
            JOptionPane.showMessageDialog(null, "Phone Number is invalid.");
            return false;
        }
        //txtProductCategoryName.setText("");
        return true;
    }
    
    public void saveCustomerForm(){
 
        Customer customer = new Customer();
        customer.setCustomerName(txtCustomerName.getText());
        customer.setPhoneNumber(txtCustomerPhone.getText().trim());
        customer.setAddress(txtAddress.getText());
        CustomerDAO customerDAO = new CustomerDAO();
        customerDAO.insertIntoDB(customer);
        
    }
    public void updateCustomerForm(){
 
        Customer customer = new Customer();
        customer.setCustomerId(customerId);
        customer.setCustomerName(txtCustomerName.getText());
        customer.setPhoneNumber(txtCustomerPhone.getText().trim());
        customer.setAddress(txtAddress.getText());
        CustomerDAO customerDAO = new CustomerDAO();
        customerDAO.updateRecord(customer);
        
    }
    
    
    public void renderDataIntoTable(List<Customer> customerList){
        
        customerModel = (DefaultTableModel) tblCustomer.getModel();
        TableColumn column = tblCustomer.getColumnModel().getColumn(tblCustomer.getColumnCount()-1);
        column.setMaxWidth(0);
        column.setWidth(0);
        column.setPreferredWidth(0);
        lblCount.setText("Count : "+customerList.size());
        //pricingTierModel.getColumnName(3).
        //System.out.println("-----"+pricingTierList.size());
        for(int i=0;i<customerList.size();i++){
        customerModel.addRow(new Object[]{customerList.get(i).getCustomerName(),customerList.get(i).getPhoneNumber(),customerList.get(i).getAddress(),customerList.get(i).getCustomerId()});
        //model.
        }
        
        tblCustomer.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent me) {
                if (me.getClickCount() == 2) {     // to detect doble click events
                    syncDataFromViewToTable();
                }
            }
        });
        
    }
    public void syncDataFromViewToTable(){
                //int rowIndex = tblSupplier.getSelectedRow();
        Customer customer = null;
        System.out.println("--------INSIDE Edit-"+tblCustomer.getModel().getValueAt(tblCustomer.getSelectedRow(),0));
        customerId = Integer.parseInt(tblCustomer.getModel().getValueAt(tblCustomer.getSelectedRow(),tblCustomer.getColumnCount()-1).toString());
        CustomerDAO customerDAO = new CustomerDAO();
        customer = customerDAO.retrieveById(customerId);
        System.out.println("--"+customer.getCustomerName());
        txtCustomerName.setText(customer.getCustomerName());
        txtCustomerPhone.setText(customer.getPhoneNumber()+"");
        txtAddress.setText(customer.getAddress());
        enableFormElements(true);
        //btnSave.setText("Save");
        //btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
        btnSave.setText("Update");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblCustomerPhoneNumber;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JPopupMenu mnuCustomer;
    private javax.swing.JScrollPane panCustomer;
    private javax.swing.JPanel pnlCustomer;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomerPhone;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent event) {
        try{
            JMenuItem menu = (JMenuItem) event.getSource();
            if (menu == mitDelete) {
                //int rowIndex = tblPricingTier.getSelectedRow();
                System.out.println("--------INSIDE DELETE-"+tblCustomer.getModel().getValueAt(tblCustomer.getSelectedRow(),0));
                String customerId = tblCustomer.getModel().getValueAt(tblCustomer.getSelectedRow(),tblCustomer.getColumnCount()-1).toString();
                long id = Long.parseLong(customerId);
                CustomerDAO customerDAO = new CustomerDAO();
                customerDAO.deleteRecordById(id);
                GenericUtils.removeRowFromJTable(tblCustomer, customerModel);
            }
            if (menu == mitEdit) {
                syncDataFromViewToTable();
                
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
}
