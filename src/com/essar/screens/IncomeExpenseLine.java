/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.essar.screens;

import com.essar.dao.CustomerDAO;
import com.essar.dao.IncomeExpenseDAO;
import com.essar.dao.PricingTierDAO;
import com.essar.dao.ProductCategoryDAO;
import com.essar.pojos.Customer;
import com.essar.pojos.IncomeExpense;
import com.essar.pojos.PricingTier;
import com.essar.utils.TableMouseListener;
import com.essar.pojos.ProductCategory;
import com.essar.utils.GenericUtils;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author rahumathulla
 */
public class IncomeExpenseLine extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ProductCategory
     */
    long incomeExpenseId=0;
    DefaultTableModel IncomeExpenseModel = null;
    public IncomeExpenseLine() {
        initComponents();
        initializeForm();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tienda.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        mnuCustomer = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        pnlIncomeExpense = new javax.swing.JPanel();
        panIncomeExpense = new javax.swing.JScrollPane();
        tblIncomeExpense = new javax.swing.JTable();
        lblCustomerName = new javax.swing.JLabel();
        lblCustomerPhoneNumber = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtRemarks = new javax.swing.JTextArea();
        txtParticularName = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        lblCount = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        btnSave = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        mitDelete.setText("jMenuItem1");

        mitEdit.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Income/Expenditure Master");
        setName("frmProductCategory"); // NOI18N

        tblIncomeExpense.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Particular Name", "Type", "Remarks", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        panIncomeExpense.setViewportView(tblIncomeExpense);

        javax.swing.GroupLayout pnlIncomeExpenseLayout = new javax.swing.GroupLayout(pnlIncomeExpense);
        pnlIncomeExpense.setLayout(pnlIncomeExpenseLayout);
        pnlIncomeExpenseLayout.setHorizontalGroup(
            pnlIncomeExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIncomeExpenseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panIncomeExpense, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE))
        );
        pnlIncomeExpenseLayout.setVerticalGroup(
            pnlIncomeExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIncomeExpenseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panIncomeExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCustomerName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCustomerName.setText("Particular Name");

        lblCustomerPhoneNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCustomerPhoneNumber.setText("Type");

        lblAddress.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        lblAddress.setText("Remarks");

        txtRemarks.setColumns(16);
        txtRemarks.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtRemarks.setRows(3);
        txtRemarks.setTabSize(2);
        txtRemarks.setToolTipText("");
        txtRemarks.setAutoscrolls(false);
        jScrollPane3.setViewportView(txtRemarks);

        txtParticularName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblCount.setForeground(new java.awt.Color(102, 102, 255));
        lblCount.setText("Count:");

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Debit", "Credit" }));

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlIncomeExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCustomerPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblCount, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel))
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtParticularName)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParticularName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancel)
                            .addComponent(btnSave))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(pnlIncomeExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if(btnSave.getText().equalsIgnoreCase("add")){
            btnSave.setText("Save");
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
            enableFormElements(true);
            txtParticularName.requestFocus();
        }else{
            if(validateForm()){
                if(incomeExpenseId>0)
                    updateIncomeExpenseForm();
                else
                    saveIncomeExpenseForm();
                initializeForm();

            }   

        }
    }//GEN-LAST:event_btnSaveActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IncomeExpenseLine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IncomeExpenseLine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IncomeExpenseLine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IncomeExpenseLine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</etxtRemarks>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IncomeExpenseLine().setVisible(true);
            }
        });
    }
    
    public void initializeForm(){
        DefaultTableModel model = (DefaultTableModel) tblIncomeExpense.getModel();
        model.setRowCount(0);
        
        btnSave.setText("Add");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png")));
        btnSave.requestFocus();
        txtParticularName.setText("");
        //txtCustomerPhone.setText("");
        txtRemarks.setText("");
     
        //tblProductCategory.re();
        //tblCategory.remove(panPricingTier);
        enableFormElements(false);
        IncomeExpenseDAO incomeExpenseDAO = new IncomeExpenseDAO();
        renderDataIntoTable(incomeExpenseDAO.retrieveAll());
        mnuCustomer = new JPopupMenu();
        
        mitEdit = new JMenuItem("Edit");
        mitEdit.addActionListener(this);
        
        mitDelete = new JMenuItem("Delete");
        mitDelete.addActionListener(this);
        
        mnuCustomer.add(mitEdit);
        mnuCustomer.add(mitDelete);
         // sets the popup menu for the table
        tblIncomeExpense.setComponentPopupMenu(mnuCustomer);      
        tblIncomeExpense.addMouseListener(new TableMouseListener(tblIncomeExpense));
        
        TableColumn idColumn1 = tblIncomeExpense.getColumnModel().getColumn(tblIncomeExpense.getColumnCount()-1);
        idColumn1.setPreferredWidth(0);
        idColumn1.setMinWidth(0);
        idColumn1.setMaxWidth(0);
        
        TableColumn remarksColumn = tblIncomeExpense.getColumnModel().getColumn(tblIncomeExpense.getColumnCount()-2);
        remarksColumn.setPreferredWidth(400);
        remarksColumn.setMinWidth(400);
        //remarksColumn.setMaxWidth(0);
        
        TableColumn particularColumn = tblIncomeExpense.getColumnModel().getColumn(0);
        particularColumn.setPreferredWidth(160);
        particularColumn.setMinWidth(160);
        
        TableColumn typeColumn = tblIncomeExpense.getColumnModel().getColumn(1);
        typeColumn.setPreferredWidth(60);
        //typeColumn.setMinWidth(0);
        typeColumn.setMaxWidth(60);
        incomeExpenseId = 0;
        

        //typeColumn.setMaxWidth(60);
        incomeExpenseId = 0;
    }
    
    public void enableFormElements(boolean flag){
        txtParticularName.setEnabled(flag);
        cmbType.setEnabled(flag);
        txtRemarks.setEnabled(flag); 
    }
    public boolean validateForm(){
        //btnSave.setText("Add");
        //btnSave.requestFocus();
        if(null == txtParticularName.getText() || "".equalsIgnoreCase(txtParticularName.getText().trim())){
            JOptionPane.showMessageDialog(null, "Particular Name "+txtParticularName.getText() +" is not valid.");
            return false;
        }
        
        //txtProductCategoryName.setText("");
        return true;
    }
    
    public void saveIncomeExpenseForm(){
 
        IncomeExpense incomeExpense = new IncomeExpense();
        incomeExpense.setIncomeExpenseName(txtParticularName.getText());
        incomeExpense.setType(cmbType.getSelectedItem().toString());
        incomeExpense.setRemarks(txtRemarks.getText());
        IncomeExpenseDAO incomeExpenseDAO = new IncomeExpenseDAO();
        incomeExpenseDAO.insertIntoDB(incomeExpense);
        
    }
    public void updateIncomeExpenseForm(){
 
        IncomeExpense incomeExpense = new IncomeExpense();
        incomeExpense.setIncomeExpenseId(incomeExpenseId);
        incomeExpense.setIncomeExpenseName(txtParticularName.getText().trim());
        incomeExpense.setType(cmbType.getSelectedItem().toString());
        incomeExpense.setRemarks(txtRemarks.getText().trim());
        
        IncomeExpenseDAO incomeExpenseDAO = new IncomeExpenseDAO();
        incomeExpenseDAO.updateRecord(incomeExpense);
        
    }
    
    
    public void renderDataIntoTable(List<IncomeExpense> incomeExpenseList){
        
        IncomeExpenseModel = (DefaultTableModel) tblIncomeExpense.getModel();
        TableColumn column = tblIncomeExpense.getColumnModel().getColumn(tblIncomeExpense.getColumnCount()-1);
        column.setMaxWidth(0);
        column.setWidth(0);
        column.setPreferredWidth(0);
        lblCount.setText("Count : "+incomeExpenseList.size());
        //pricingTierModel.getColumnName(3).
        //System.out.println("-----"+pricingTierList.size());
        for(int i=0;i<incomeExpenseList.size();i++){
        IncomeExpenseModel.addRow(new Object[]{incomeExpenseList.get(i).getIncomeExpenseName(),incomeExpenseList.get(i).getType(),incomeExpenseList.get(i).getRemarks(),incomeExpenseList.get(i).getIncomeExpenseId()});
        //model.
        }
        
        tblIncomeExpense.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent me) {
                if (me.getClickCount() == 2) {     // to detect doble click events
                    syncDataFromViewToTable();
                }
            }
        });
        
    }
    
        public void syncDataFromViewToTable(){
            IncomeExpense incomeExpense = null;
            System.out.println("--------INSIDE Edit-"+tblIncomeExpense.getModel().getValueAt(tblIncomeExpense.getSelectedRow(),0));
            incomeExpenseId = Integer.parseInt(tblIncomeExpense.getModel().getValueAt(tblIncomeExpense.getSelectedRow(),tblIncomeExpense.getColumnCount()-1).toString());
            IncomeExpenseDAO incomeExpenseDAO = new IncomeExpenseDAO();
            incomeExpense = incomeExpenseDAO.retrieveById(incomeExpenseId);
            System.out.println("--"+incomeExpense.getIncomeExpenseName());
            txtParticularName.setText(incomeExpense.getIncomeExpenseName());
            cmbType.setSelectedItem(incomeExpense.getType());
            txtRemarks.setText(incomeExpense.getRemarks());
            enableFormElements(true);
            btnSave.setText("Save");
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblCustomerPhoneNumber;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JPopupMenu mnuCustomer;
    private javax.swing.JScrollPane panIncomeExpense;
    private javax.swing.JPanel pnlIncomeExpense;
    private javax.swing.JTable tblIncomeExpense;
    private javax.swing.JTextField txtParticularName;
    private javax.swing.JTextArea txtRemarks;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent event) {
        try{
            JMenuItem menu = (JMenuItem) event.getSource();
            if (menu == mitDelete) {
              //txtParticularName= tblIncomeExpense.getSelectedRow();
                System.out.println("--------INSIDE DELETE-"+tblIncomeExpense.getModel().getValueAt(tblIncomeExpense.getSelectedRow(),0));
                String incomeExpenseId = tblIncomeExpense.getModel().getValueAt(tblIncomeExpense.getSelectedRow(),tblIncomeExpense.getColumnCount()-1).toString();
                long id = Long.parseLong(incomeExpenseId);
                IncomeExpenseDAO incomeExpenseDAO = new IncomeExpenseDAO();
                incomeExpenseDAO.deleteRecordById(id);
                GenericUtils.removeRowFromJTable(tblIncomeExpense, IncomeExpenseModel);
            }
            if (menu == mitEdit) {
                //int rowIndex = tblSupplier.getSelectedRow();
                syncDataFromViewToTable();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
}
