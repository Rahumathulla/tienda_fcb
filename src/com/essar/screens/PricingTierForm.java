/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.essar.screens;

import com.essar.dao.PricingTierDAO;
import com.essar.dao.ProductCategoryDAO;
import com.essar.pojos.PricingTier;
import com.essar.utils.TableMouseListener;
import com.essar.pojos.ProductCategory;
import com.essar.utils.GenericUtils;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author rahumathulla
 */
public class PricingTierForm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ProductCategory
     */
    long pricingTierId=0;
    DefaultTableModel pricingTierModel = null;
    public PricingTierForm() {
        initComponents();
        initializeForm();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tienda.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        mnuPricingTier = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        pnlPricingTier = new javax.swing.JPanel();
        lblProductCategoryName = new javax.swing.JLabel();
        txtCustomerType = new javax.swing.JTextField();
        txtPricingPercentage = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblProductCategoryCode2 = new javax.swing.JLabel();
        lblProductCategoryName1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        panPricingTier = new javax.swing.JScrollPane();
        tblPricingTier = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        mitDelete.setText("jMenuItem1");

        mitEdit.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pricing Tier");
        setName("frmProductCategory"); // NOI18N

        lblProductCategoryName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProductCategoryName.setText("Pricing Percentage");

        txtCustomerType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPricingPercentage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        btnSave.setMnemonic('S');
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblProductCategoryCode2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProductCategoryCode2.setText("Customer Type");

        lblProductCategoryName1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProductCategoryName1.setText("Description");

        txtDescription.setColumns(16);
        txtDescription.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtDescription.setRows(3);
        txtDescription.setTabSize(2);
        txtDescription.setToolTipText("");
        txtDescription.setAutoscrolls(false);
        jScrollPane3.setViewportView(txtDescription);

        javax.swing.GroupLayout pnlPricingTierLayout = new javax.swing.GroupLayout(pnlPricingTier);
        pnlPricingTier.setLayout(pnlPricingTierLayout);
        pnlPricingTierLayout.setHorizontalGroup(
            pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPricingTierLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblProductCategoryName1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProductCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProductCategoryCode2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPricingPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(txtCustomerType))
                .addGap(73, 73, 73))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPricingTierLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addGap(71, 71, 71))
        );
        pnlPricingTierLayout.setVerticalGroup(
            pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPricingTierLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductCategoryCode2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPricingPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProductCategoryName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPricingTierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        tblPricingTier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Type", "Pricing Percentage", "Description", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        panPricingTier.setViewportView(tblPricingTier);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panPricingTier, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlPricingTier, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlPricingTier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panPricingTier, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(btnSave.getText().equalsIgnoreCase("add")){
            btnSave.setText("Save");
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png")));
            enableFormElements(true);
            txtCustomerType.requestFocus();
        }else{
            if(validateForm()){
                if(pricingTierId>0)
                    updateProductCategoryForm();
                else
                    saveProductCategoryForm();
                initializeForm();
                
                // Bug Fix for row doubling during table record deletion
                //this.dispose();
                //PricingTierForm pricingTierForm = new PricingTierForm();
                //pricingTierForm.setBounds(100, 100, 460, 395);
                //pricingTierForm.setVisible(true);
            }   

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PricingTierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PricingTierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PricingTierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PricingTierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PricingTierForm().setVisible(true);
            }
        });
    }
    
    public void initializeForm(){
        
        DefaultTableModel model = (DefaultTableModel) tblPricingTier.getModel();
        model.setRowCount(0);
        
        btnSave.setText("Add");
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png")));
        btnSave.requestFocus();
        txtCustomerType.setText("");
        txtPricingPercentage.setText("");
     
        //tblProductCategory.re();
        //tblCategory.remove(panPricingTier);
        enableFormElements(false);
        PricingTierDAO pricingTierDAO = new PricingTierDAO();
        renderDataIntoTable(pricingTierDAO.retrieveAll());
        mnuPricingTier = new JPopupMenu();
        
        mitEdit = new JMenuItem("Edit");
        mitEdit.addActionListener(this);
        
        mitDelete = new JMenuItem("Delete");
        mitDelete.addActionListener(this);
        
        mnuPricingTier.add(mitEdit);
        mnuPricingTier.add(mitDelete);
         // sets the popup menu for the table
        tblPricingTier.setComponentPopupMenu(mnuPricingTier);      
        tblPricingTier.addMouseListener(new TableMouseListener(tblPricingTier));
        
        TableColumn idColumn1 = tblPricingTier.getColumnModel().getColumn(tblPricingTier.getColumnCount()-1);
        idColumn1.setPreferredWidth(0);
        idColumn1.setMinWidth(0);
        idColumn1.setMaxWidth(0);
        
        TableColumn remarksColumn = tblPricingTier.getColumnModel().getColumn(tblPricingTier.getColumnCount()-2);
        remarksColumn.setPreferredWidth(240);
        remarksColumn.setMinWidth(240);
        //remarksColumn.setMaxWidth(0);

   
    }
    
    public void enableFormElements(boolean flag){
        txtCustomerType.setEnabled(flag);
        txtPricingPercentage.setEnabled(flag);
    }
    public boolean validateForm(){
        //btnSave.setText("Add");
        //btnSave.requestFocus();
        if(null == txtCustomerType.getText() || !(txtCustomerType.getText().matches("\\w+"))){
            JOptionPane.showMessageDialog(null, "Customer typpe "+txtCustomerType.getText() +" is not valid.");
            return false;
        }
        if(null == txtPricingPercentage.getText()){
            JOptionPane.showMessageDialog(null, "Pricing percentage cannot be empty.");
            return false;
        }
        //txtProductCategoryName.setText("");
        return true;
    }
    
    public void saveProductCategoryForm(){
 
        PricingTier pricingTier = new PricingTier();
        pricingTier.setCustomerTypeName(txtCustomerType.getText());
        pricingTier.setPricingPercentage(Double.parseDouble(txtPricingPercentage.getText().trim()));
        pricingTier.setDescription(txtDescription.getText());
        PricingTierDAO pricingTierDAO = new PricingTierDAO();
        pricingTierDAO.insertIntoDB(pricingTier);
        
    }
    public void updateProductCategoryForm(){
 
        PricingTier pricingTier = new PricingTier();
        pricingTier.setId(pricingTierId);
        pricingTier.setCustomerTypeName(txtCustomerType.getText());
        pricingTier.setCustomerTypeName(txtCustomerType.getText());
        pricingTier.setPricingPercentage(Double.parseDouble(txtPricingPercentage.getText().trim()));
        pricingTier.setDescription(txtDescription.getText());
        PricingTierDAO pricingTierDAO = new PricingTierDAO();
        pricingTierDAO.updateRecord(pricingTier);
        
    }
    
    
    public void renderDataIntoTable(List<PricingTier> pricingTierList){
        
        pricingTierModel = (DefaultTableModel) tblPricingTier.getModel();
        TableColumn column = tblPricingTier.getColumnModel().getColumn(tblPricingTier.getColumnCount()-1);
        column.setMaxWidth(0);
        column.setWidth(0);
        column.setPreferredWidth(0);
        //pricingTierModel.getColumnName(3).
        //System.out.println("-----"+pricingTierList.size());
        for(int i=0;i<pricingTierList.size();i++){
        pricingTierModel.addRow(new Object[]{pricingTierList.get(i).getCustomerTypeName(),pricingTierList.get(i).getPricingPercentage(),pricingTierList.get(i).getDescription(),pricingTierList.get(i).getId()});
        //model.
        }        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblProductCategoryCode2;
    private javax.swing.JLabel lblProductCategoryName;
    private javax.swing.JLabel lblProductCategoryName1;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JPopupMenu mnuPricingTier;
    private javax.swing.JScrollPane panPricingTier;
    private javax.swing.JPanel pnlPricingTier;
    private javax.swing.JTable tblPricingTier;
    private javax.swing.JTextField txtCustomerType;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtPricingPercentage;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent event) {
        try{
            JMenuItem menu = (JMenuItem) event.getSource();
            if (menu == mitDelete) {
                //int rowIndex = tblPricingTier.getSelectedRow();
                System.out.println("--------INSIDE DELETE-"+tblPricingTier.getModel().getValueAt(tblPricingTier.getSelectedRow(),0));
                String productCategoryCode = tblPricingTier.getModel().getValueAt(tblPricingTier.getSelectedRow(),tblPricingTier.getColumnCount()-1).toString();
                long id = Long.parseLong(productCategoryCode);
                PricingTierDAO pricingTierDAO = new PricingTierDAO();
                pricingTierDAO.deleteRecordById(id);
                GenericUtils.removeRowFromJTable(tblPricingTier, pricingTierModel);
            }
            if (menu == mitEdit) {
                //int rowIndex = tblSupplier.getSelectedRow();
                PricingTier pricingTier = null;
                System.out.println("--------INSIDE Edit-"+tblPricingTier.getModel().getValueAt(tblPricingTier.getSelectedRow(),0));
                pricingTierId = Integer.parseInt(tblPricingTier.getModel().getValueAt(tblPricingTier.getSelectedRow(),tblPricingTier.getColumnCount()-1).toString());
                PricingTierDAO pricingTierDAO = new PricingTierDAO();
                pricingTier = pricingTierDAO.retrieveById(pricingTierId);
                System.out.println("--"+pricingTier.getCustomerTypeName());
                txtCustomerType.setText(pricingTier.getCustomerTypeName());
                txtPricingPercentage.setText(pricingTier.getPricingPercentage()+"");
                txtDescription.setText(pricingTier.getDescription());
                enableFormElements(true);
                btnSave.setText("Update");
                btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png")));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
}
