/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.essar.screens;

import com.essar.dao.GstDAO;
import com.essar.dao.PricingTierDAO;
import com.essar.dao.StockDAO;
import com.essar.dao.SupplierDAO;
import com.essar.pojos.GST;
import com.essar.pojos.Sales;
import com.essar.pojos.SalesDetails;
import com.essar.utils.ConnectionManager;
import com.essar.utils.TableMouseListener;
import com.essar.pojos.Stock;
import com.essar.pojos.Supplier;
import com.essar.suggestion.SuggestionExampleMain;
import com.essar.utils.QueryStrings;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author rahumathulla
 */
public class StockAudit extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form Stock
     */
    long stockIdEdit=0;
    DecimalFormat df = new DecimalFormat("####.##");
    Stock stock = null;
    double gSalesPercentage = 0;
    double gStockAvailable = 0;
    public StockAudit() {
        initComponents();
        initializeForm();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tienda.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlStockEntry = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtHSNCode = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        txtUnitPrice = new javax.swing.JTextField();
        txtGstPercentage = new javax.swing.JTextField();
        txtGstAmount = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        lblUnitPrice3 = new javax.swing.JLabel();
        lblUnitPrice2 = new javax.swing.JLabel();
        lblUnitPrice = new javax.swing.JLabel();
        lblAvailableQty = new javax.swing.JLabel();
        cmdReset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblDirectStockEntry = new javax.swing.JLabel();
        lblPuchase = new javax.swing.JLabel();
        lblCurrentStock = new javax.swing.JLabel();
        lblSales = new javax.swing.JLabel();
        txtDirectStockEntry = new javax.swing.JLabel();
        txtPurchase = new javax.swing.JLabel();
        txtSales = new javax.swing.JLabel();
        txtCurrentStock = new javax.swing.JLabel();
        lblDifference = new javax.swing.JLabel();
        txtDifference = new javax.swing.JLabel();
        lblSummaryIcon = new javax.swing.JLabel();
        cmdPurchaseHistory = new javax.swing.JButton();
        cmdSalesHistory = new javax.swing.JButton();
        lblPossibleReasons = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stock Audit");

        pnlStockEntry.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Details"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("HSN Code");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Commodity/Item Name");

        txtHSNCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtHSNCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHSNCodeActionPerformed(evt);
            }
        });
        txtHSNCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHSNCodeKeyPressed(evt);
            }
        });

        txtItemName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtItemName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtItemNameFocusLost(evt);
            }
        });
        txtItemName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtItemNameMouseClicked(evt);
            }
        });
        txtItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemNameActionPerformed(evt);
            }
        });
        txtItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemNameKeyTyped(evt);
            }
        });

        txtUnitPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtUnitPrice.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitPriceActionPerformed(evt);
            }
        });

        txtGstPercentage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtGstPercentage.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtGstPercentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGstPercentageActionPerformed(evt);
            }
        });

        txtGstAmount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtGstAmount.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtGstAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGstAmountActionPerformed(evt);
            }
        });

        lblQuantity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblQuantity.setText("Quantity");

        lblUnitPrice3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUnitPrice3.setText("GST Amt");

        lblUnitPrice2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUnitPrice2.setText("GST%");

        lblUnitPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUnitPrice.setText("Unit Price");

        lblAvailableQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAvailableQty.setForeground(new java.awt.Color(0, 102, 0));
        lblAvailableQty.setText("00");

        cmdReset.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmdReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reset_small.png"))); // NOI18N
        cmdReset.setText("Reset");
        cmdReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStockEntryLayout = new javax.swing.GroupLayout(pnlStockEntry);
        pnlStockEntry.setLayout(pnlStockEntryLayout);
        pnlStockEntryLayout.setHorizontalGroup(
            pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockEntryLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmdReset)
                    .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHSNCode, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStockEntryLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(txtGstPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStockEntryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUnitPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUnitPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGstAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvailableQty, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlStockEntryLayout.setVerticalGroup(
            pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockEntryLayout.createSequentialGroup()
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlStockEntryLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlStockEntryLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(txtHSNCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlStockEntryLayout.createSequentialGroup()
                        .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUnitPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUnitPrice2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblUnitPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblQuantity)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGstPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtGstAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAvailableQty)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(cmdReset))
        );

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Summary"));

        lblDirectStockEntry.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDirectStockEntry.setText("Direct Stock Entry");

        lblPuchase.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPuchase.setText("Purchase");

        lblCurrentStock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCurrentStock.setText("Current Stock");

        lblSales.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSales.setText("Sales");

        txtDirectStockEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtDirectStockEntry.setForeground(new java.awt.Color(0, 102, 204));
        txtDirectStockEntry.setText("00");

        txtPurchase.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPurchase.setForeground(new java.awt.Color(153, 51, 0));
        txtPurchase.setText("00");

        txtSales.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSales.setForeground(new java.awt.Color(0, 102, 0));
        txtSales.setText("00");

        txtCurrentStock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCurrentStock.setForeground(new java.awt.Color(0, 102, 102));
        txtCurrentStock.setText("00");

        lblDifference.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDifference.setText("Difference : ");

        txtDifference.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDifference.setForeground(new java.awt.Color(0, 153, 153));
        txtDifference.setText("00");

        lblSummaryIcon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSummaryIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/thumbs_up.png"))); // NOI18N

        cmdPurchaseHistory.setBackground(new java.awt.Color(255, 204, 204));
        cmdPurchaseHistory.setText("Purchase History");

        cmdSalesHistory.setBackground(new java.awt.Color(153, 255, 153));
        cmdSalesHistory.setText("Sales  History");
        cmdSalesHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSalesHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblCurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCurrentStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(lblDirectStockEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDirectStockEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(166, 166, 166))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblPuchase, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblSales, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmdPurchaseHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(cmdSalesHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(91, 91, 91)))
                .addComponent(lblDifference, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDifference, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSummaryIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDirectStockEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDirectStockEntry))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDifference, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblDifference, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPuchase, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPurchase)
                                .addComponent(cmdPurchaseHistory)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSales, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSales)
                            .addComponent(cmdSalesHistory)))
                    .addComponent(lblSummaryIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCurrentStock))
                .addGap(20, 20, 20))
        );

        lblPossibleReasons.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblPossibleReasons.setText("Possible Reasons: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlStockEntry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblPossibleReasons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlStockEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPossibleReasons, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHSNCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHSNCodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_TAB || evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtItemName.requestFocus();
        }
    }//GEN-LAST:event_txtHSNCodeKeyPressed

    private void txtHSNCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHSNCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHSNCodeActionPerformed

    private void txtItemNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemNameFocusLost

    private void txtItemNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtItemNameMouseClicked

    }//GEN-LAST:event_txtItemNameMouseClicked

    private void txtItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemNameActionPerformed
        // TODO add your handling code here:
        System.out.println("---inside Action Peformed");
        performItemFieldAction();
        
    }//GEN-LAST:event_txtItemNameActionPerformed

    private void txtItemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemNameKeyPressed

    private void txtItemNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            System.out.println("---inside item name enter");
            try{
                performItemFieldAction();
            }
            catch(Exception e){
                System.out.println("Error Retrieving the item -"+e.getMessage());
            }
        }
    }//GEN-LAST:event_txtItemNameKeyReleased

    private void txtItemNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemNameKeyTyped

    private void txtUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitPriceActionPerformed

    private void txtGstPercentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGstPercentageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGstPercentageActionPerformed

    private void txtGstAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGstAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGstAmountActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cmdResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdResetActionPerformed
        // TODO add your handling code here:
        initializeForm();
    }//GEN-LAST:event_cmdResetActionPerformed

    private void cmdSalesHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSalesHistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdSalesHistoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockAudit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockAudit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockAudit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockAudit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockAudit().setVisible(true);
            }
        });
    }
    
    public void initializeForm(){
        stockIdEdit =0;
        txtHSNCode.requestFocus();

        SupplierDAO supplierDAO = new SupplierDAO();
        renderDataIntoTable(supplierDAO.retrieveAll());
        SuggestionExampleMain.populateItemNames(this, txtItemName);
            //txtItemName.requestFocus();
        txtItemName.requestFocus();
        clearItemFields();
        showHistoryButtons(false);

    }
    
    public void clearItemFields(){
        lblSummaryIcon.setIcon(null);
        lblPossibleReasons.setText("");
        txtItemName.setText("");
        txtDifference.setText("");
        txtCurrentStock.setText("");
        txtGstAmount.setText("");
        txtGstPercentage.setText("");
        txtHSNCode.setText("");
        txtPurchase.setText("");
        txtSales.setText("");
        txtUnitPrice.setText("");
    }
    
    public void enableFormElements(boolean flag){
        txtHSNCode.setEnabled(flag);
       
    }
    public boolean validateForm(){
        //btnSave.setText("Add");
        //btnSave.requestFocus();
        if(null == txtHSNCode.getText() || !(txtHSNCode.getText().matches("\\w+"))){
            JOptionPane.showMessageDialog(null, "HSN code "+txtHSNCode.getText() +" is not valid.");
            txtHSNCode.requestFocus();
            return false;
        }
        if(null == txtItemName.getText() || txtItemName.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Item name "+txtItemName.getText() +" is not valid.");
            txtItemName.requestFocus();
            return false;
        }
        
        return true;
    }
    
    public void saveStockData(){
 
        Stock stock = new Stock();
        stock.setHsnCode(txtHSNCode.getText());
        stock.setItemName(txtItemName.getText());
       
        //Float fSellingPrice = (Float.parseFloat(txtPurchasePrice.getText()))+(Float.parseFloat(txtMargin.getText()));
        double preMarginSalesPrice = stock.getPurchasePrice()+stock.getPurchasePrice()*stock.getGstPercentage()*0.01;
        stock.setSellingPrice(preMarginSalesPrice+preMarginSalesPrice*stock.getMargin()*0.01);

        StockDAO stockDAO = new StockDAO();
        if (stockIdEdit >0){
            stock.setItemId(stockIdEdit);
            stockDAO.updateStock(stock);
        }else
            stockDAO.insertIntoDB(stock);
        
    }
    
    public final void fetchStockDataIntoTable(Stock stock){
        stockIdEdit=0;
        stockIdEdit = stock.getItemId();
        System.out.println("--Called fetchStockDataIntoTable"+stock.getItemName());
        //initializeForm();
        enableFormElements(true);

    }
    
    public void performItemFieldAction(){
        try{
            StockDAO stockDAO = null;
            //Stock
            stock = null;
            double dUnitGst=0.0;
            double dUnitSellingPrice=0.0;
            double dUnitDiscount=0.0;
            double dUnitPostGstPrice=0.0;

            if(!txtItemName.getText().equalsIgnoreCase(""))
            stockDAO = new StockDAO();
            stock = stockDAO.retrieveByName(txtItemName.getText().trim());
            txtHSNCode.setText(stock.getHsnCode());
            txtUnitPrice.setText(stock.getPurchasePrice()+"");

            //GST Amount Calculation
            txtGstPercentage.setText(stock.getGstPercentage()+"");
            dUnitGst = stock.getGstPercentage()*stock.getPurchasePrice()/100;
            txtGstAmount.setText(df.format(dUnitGst)+"");
            //txt.setText(df.format(dUnitGst)+"");

            //Price after Tax calculation
            dUnitPostGstPrice = dUnitGst +stock.getPurchasePrice();

            //Discount calculation
            if(stock.getDiscount()>0){

            }
            //dUnitDiscount = Double.parseDouble(stock.getDiscount())*Double.parseDouble(stock.getPurchasePrice())/100;

            //Selling Price calculation
            dUnitSellingPrice = dUnitPostGstPrice + dUnitPostGstPrice*stock.getMargin()/100;
            double tempPrice = dUnitSellingPrice;
            dUnitSellingPrice = dUnitSellingPrice * gSalesPercentage *0.01;// *.01 is equivalent to division by 100

            System.out.println("outside cust type loop");


            //txtSellingPrice.setText(df.format(dUnitSellingPrice)+"");
            //Stock Availability Check
            gStockAvailable = stock.getQuantity();
            lblAvailableQty.setText(gStockAvailable+"");
            txtHSNCode.setEnabled(false);
            txtGstPercentage.setEnabled(false);
            txtGstAmount.setEnabled(false);
            txtUnitPrice.setEnabled(false);
            
            List<Double> summaryList = null;
            stockDAO = new StockDAO();
            System.out.println("ITEM ID :" +stock.getItemId());
            summaryList = stockDAO.retrieveAuditSummary(stock.getItemId(), stock.getItemName());
            System.out.println("Summary Size :"+summaryList.size());
            if(summaryList.get(0)!= 0.1)
                txtDirectStockEntry.setText(summaryList.get(0)+"");
            else
                txtDirectStockEntry.setText("0");
            if(summaryList.get(1)!= 0.2)
                txtPurchase.setText(summaryList.get(1)+"");
            else
                txtPurchase.setText("0");
            if(summaryList.get(2)!= 0.3)
                txtSales.setText(summaryList.get(2)+"");
            else
                txtSales.setText("0");
            if(summaryList.get(3)!= 0.4)
                txtCurrentStock.setText(summaryList.get(3)+"");
            else
                txtCurrentStock.setText("0");
            
            Double difference = Double.parseDouble(txtDirectStockEntry.getText().toString())+
                    Double.parseDouble(txtPurchase.getText().toString())-
                    Double.parseDouble(txtCurrentStock.getText().toString())-
                    Double.parseDouble(txtSales.getText().toString());
            txtDifference.setText(difference+"");
            if(difference==0)
                lblSummaryIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/thumbs_up.png")));
            else
                lblSummaryIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/recheck.png")));
            
            if(difference<0){
                lblPossibleReasons.setText("Possible Reasons: \n 1) Missed purchase entry or stock entry, \n 2) Sold more items than the Stock \n"
                                            + ", 3) Purchase/Stock was entered corresponding to a wrong item"
                                            );
            }else if(difference>0){
                lblPossibleReasons.setText("Possible Reasons: \n 1) Missed sales entry of the item, \n 2) Sold less than the actual quantity \n"
                                            + ", 3) Purchase/Stock was entered corresponding to this item by mistake"
                                            );
            }else{
                lblPossibleReasons.setText("");
            }
            cmdReset.requestFocus();
            showHistoryButtons(true);
            
        }
        catch(Exception e){
            System.out.println("Error Retrieving the item -"+e.getMessage());
        }
    }
    
    public void renderDataIntoTable(List<Supplier> supplierList){

        
    }
    public void showHistoryButtons(boolean choice){
        cmdPurchaseHistory.setVisible(choice);
        cmdSalesHistory.setVisible(choice);
    }
   
    
    public void renderSupplierDataIntoDropDown(List<Supplier> supplierList){
        Supplier supplier = null;
        if(supplierList!= null){
  
        }
    }
    
    public void renderGstDataIntoDropDown(List<GST> gstList){
        GST gst = null;
        if(gstList!= null){

        }  
    }
    
    @Override
    public void actionPerformed(ActionEvent event) {
        try{
            JMenuItem menu = (JMenuItem) event.getSource();

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton cmdPurchaseHistory;
    private javax.swing.JButton cmdReset;
    private javax.swing.JButton cmdSalesHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblAvailableQty;
    private javax.swing.JLabel lblCurrentStock;
    private javax.swing.JLabel lblDifference;
    private javax.swing.JLabel lblDirectStockEntry;
    private javax.swing.JLabel lblPossibleReasons;
    private javax.swing.JLabel lblPuchase;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblSales;
    private javax.swing.JLabel lblSummaryIcon;
    private javax.swing.JLabel lblUnitPrice;
    private javax.swing.JLabel lblUnitPrice2;
    private javax.swing.JLabel lblUnitPrice3;
    private javax.swing.JPanel pnlStockEntry;
    private javax.swing.JLabel txtCurrentStock;
    private javax.swing.JLabel txtDifference;
    private javax.swing.JLabel txtDirectStockEntry;
    private javax.swing.JTextField txtGstAmount;
    private javax.swing.JTextField txtGstPercentage;
    private javax.swing.JTextField txtHSNCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JLabel txtPurchase;
    private javax.swing.JLabel txtSales;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables
}
