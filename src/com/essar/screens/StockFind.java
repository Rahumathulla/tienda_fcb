/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.essar.screens;

import com.essar.dao.GstDAO;
import com.essar.dao.PricingTierDAO;
import com.essar.dao.StockDAO;
import com.essar.dao.SupplierDAO;
import com.essar.pojos.GST;
import com.essar.pojos.Sales;
import com.essar.pojos.SalesDetails;
import com.essar.utils.ConnectionManager;
import com.essar.utils.TableMouseListener;
import com.essar.pojos.Stock;
import com.essar.pojos.Supplier;
import com.essar.utils.QueryStrings;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author rahumathulla
 */
public class StockFind extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form Stock
     */
    long stockIdEdit=0;
    DecimalFormat df = new DecimalFormat("####.##");
    public StockFind() {
        initComponents();
        initializeForm();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/tienda.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlStockEntry = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtHSNCode = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stock Search");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("HSN Code");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Commodity/Item Name");

        txtHSNCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtHSNCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHSNCodeActionPerformed(evt);
            }
        });
        txtHSNCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHSNCodeKeyPressed(evt);
            }
        });

        txtItemName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtItemName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemNameKeyPressed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnSearch.setMnemonic('e');
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStockEntryLayout = new javax.swing.GroupLayout(pnlStockEntry);
        pnlStockEntry.setLayout(pnlStockEntryLayout);
        pnlStockEntryLayout.setHorizontalGroup(
            pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockEntryLayout.createSequentialGroup()
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStockEntryLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStockEntryLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                            .addGroup(pnlStockEntryLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))
                        .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtHSNCode)
                            .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlStockEntryLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        pnlStockEntryLayout.setVerticalGroup(
            pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockEntryLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHSNCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(pnlStockEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlStockEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(476, 476, 476))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlStockEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if(null!= txtHSNCode.getText() && !("".equals(txtHSNCode.getText())) && 
                null!= txtItemName.getText() && !("".equals(txtItemName.getText()))) { 
            QueryStrings.stockQuery = "SELECT * from stock where hsn_code ='"+txtHSNCode.getText()+"' AND item_name like '%"+txtItemName.getText()+"%'" ;
        }else if(null!= txtHSNCode.getText() && !("".equals(txtHSNCode.getText()))){
            QueryStrings.stockQuery = "SELECT * from stock where hsn_code ='"+txtHSNCode.getText()+"'";
        }else if(null!= txtItemName.getText() && !("".equals(txtItemName.getText()))){
            QueryStrings.stockQuery = "SELECT * from stock where item_name like '%"+txtItemName.getText()+"%'" ;
        }else{
            QueryStrings.stockQuery = "SELECT * from stock";
        }
        System.out.println("Query :"+QueryStrings.stockQuery);
        this.dispose();
        ViewStockAlerts stockAlerts = new ViewStockAlerts();
        //stockAlerts.setBounds(40, 40, 940, 500);
        stockAlerts.setVisible(true);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtItemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_TAB || evt.getKeyCode() == KeyEvent.VK_ENTER){
            //cmbCategory.requestFocus();
        }
    }//GEN-LAST:event_txtItemNameKeyPressed

    private void txtHSNCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHSNCodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_TAB || evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtItemName.requestFocus();
        }
    }//GEN-LAST:event_txtHSNCodeKeyPressed

    private void txtHSNCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHSNCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHSNCodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockFind().setVisible(true);
            }
        });
    }
    
    public void initializeForm(){
        stockIdEdit =0;
        txtHSNCode.requestFocus();
        


        //enableFormElements(false);
        SupplierDAO supplierDAO = new SupplierDAO();
        renderDataIntoTable(supplierDAO.retrieveAll());
        /*mnuCategory = new JPopupMenu();
        mitDelete = new JMenuItem("Delete");
        mitDelete.addActionListener(this);
        
        mnuCategory.add(mitDelete);
         // sets the popup menu for the table
        tblSupplier.setComponentPopupMenu(mnuCategory);      
        tblSupplier.addMouseListener(new TableMouseListener(tblSupplier));*/
   
    }
    
    public void enableFormElements(boolean flag){
        txtHSNCode.setEnabled(flag);
       
    }
    public boolean validateForm(){
        //btnSave.setText("Add");
        //btnSave.requestFocus();
        if(null == txtHSNCode.getText() || !(txtHSNCode.getText().matches("\\w+"))){
            JOptionPane.showMessageDialog(null, "HSN code "+txtHSNCode.getText() +" is not valid.");
            txtHSNCode.requestFocus();
            return false;
        }
        if(null == txtItemName.getText() || txtItemName.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Item name "+txtItemName.getText() +" is not valid.");
            txtItemName.requestFocus();
            return false;
        }
        
       
        
        //txtProductCategoryName.setText("");
        return true;
    }
    
    public void saveStockData(){
 
        Stock stock = new Stock();
        stock.setHsnCode(txtHSNCode.getText());
        stock.setItemName(txtItemName.getText());
       
        //Float fSellingPrice = (Float.parseFloat(txtPurchasePrice.getText()))+(Float.parseFloat(txtMargin.getText()));
        double preMarginSalesPrice = stock.getPurchasePrice()+stock.getPurchasePrice()*stock.getGstPercentage()*0.01;
        stock.setSellingPrice(preMarginSalesPrice+preMarginSalesPrice*stock.getMargin()*0.01);
       

        StockDAO stockDAO = new StockDAO();
        if (stockIdEdit >0){
            stock.setItemId(stockIdEdit);
            stockDAO.updateStock(stock);
        }else
            stockDAO.insertIntoDB(stock);
        
    }
    
    public final void fetchStockDataIntoTable(Stock stock){
        stockIdEdit=0;
        stockIdEdit = stock.getItemId();
        System.out.println("--Called fetchStockDataIntoTable"+stock.getItemName());
        //initializeForm();
        enableFormElements(true);
        
        
        

        /*if(salesDetailsModel != null){
        salesDetailsModel.addRow(new Object[]{stock.getHsnCode(),stock.getItemName(),stock.getGstPercentage(),df.format(Double.parseDouble(stock.getGstAmount()) * Double.parseDouble(txtQuantity.getText())), itemAmount, Double.parseDouble(txtQuantity.getText()), df.format(itemAmount * Double.parseDouble(txtQuantity.getText())), stock.getItemId()});
        //model.
                
        } */
        //deriveValuesFromSalesInput();
    }
    
    public void renderDataIntoTable(List<Supplier> supplierList){
        /*DefaultTableModel supplierModel = null;
        supplierModel = (DefaultTableModel) tblSupplier.getModel();
        System.out.println("-----"+supplierList.size());
        for(int i=0;i<supplierList.size();i++){
        supplierModel.addRow(new Object[]{supplierList.get(i).getSupplierCode(),supplierList.get(i).getSupplierName(),supplierList.get(i).getSupplierContactNumber(), supplierList.get(i).getSupplierRating(), supplierList.get(i).getSupplierAddress()});
        //model.
        }        */
        
    }
    
   
    
    public void renderSupplierDataIntoDropDown(List<Supplier> supplierList){
        Supplier supplier = null;
        if(supplierList!= null){
            /*for(int i=0; i<supplierList.size();i++){
                cmbSupplier.addItem(supplierList.get(i));
            }
            cmbSupplier.setSelectedIndex(0);
            supplier = (Supplier)cmbSupplier.getSelectedItem();*/     
        }
    }
    
    public void renderGstDataIntoDropDown(List<GST> gstList){
        GST gst = null;
        if(gstList!= null){
            /*for(int i=0; i<gstList.size();i++){
                cmbGST.addItem(gstList.get(i));
            }
            cmbGST.setSelectedIndex(0);
            gst = (GST)cmbGST.getSelectedItem();    */  
        }  
    }
    
    @Override
    public void actionPerformed(ActionEvent event) {
        try{
            JMenuItem menu = (JMenuItem) event.getSource();
           /* if (menu == mitDelete) {
                //int rowIndex = tblSupplier.getSelectedRow();
                System.out.println("--------INSIDE DELETE-"+tblSupplier.getModel().getValueAt(tblSupplier.getSelectedRow(),0));
                String supplierCode = tblSupplier.getModel().getValueAt(tblSupplier.getSelectedRow(),0).toString();
                SupplierDAO supplierDAO = new SupplierDAO();
                supplierDAO.deleteRecordByCode(supplierCode);
                initializeForm();
            } */
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pnlStockEntry;
    private javax.swing.JTextField txtHSNCode;
    private javax.swing.JTextField txtItemName;
    // End of variables declaration//GEN-END:variables
}
